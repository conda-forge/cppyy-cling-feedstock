From 1df295697a6aef9579495d1cc64ee6dce9fe9f6c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Julian=20R=C3=BCth?= <julian.rueth@fsfe.org>
Date: Sat, 13 Jun 2020 17:04:50 +0200
Subject: [PATCH] Remove bits of Python detection that do not work with PyPy
 and CMake 3.17

---
 src/cmake/modules/SearchRootCoreDeps.cmake | 84 +++-------------------
 1 file changed, 8 insertions(+), 76 deletions(-)

diff --git a/src/cmake/modules/SearchRootCoreDeps.cmake b/src/cmake/modules/SearchRootCoreDeps.cmake
index 5dda83f..3a84ea3 100644
--- a/src/cmake/modules/SearchRootCoreDeps.cmake
+++ b/src/cmake/modules/SearchRootCoreDeps.cmake
@@ -15,82 +15,14 @@ endif()
 
 # Python is required by header and manpage generation
 
-if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.14)
+find_package(PythonInterp ${python_version} REQUIRED)
 
-  # Determine whether we should prefer Python 2 or Python 3:
-  set(PYTHON_PREFER_VERSION "3")
-  # Check whether old `find_package(PythonInterp)` variable was passed.
-  # If so, it will be passed to find_package(Python) below. Otherwise,
-  # check what `python` points to: Python 2 or 3:
-  if(NOT PYTHON_EXECUTABLE)
-    find_program(PYTHON_EXECUTABLE "python")
-  endif()
-  if(PYTHON_EXECUTABLE)
-    execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "import sys;print(sys.version_info[0])"
-                    OUTPUT_VARIABLE PYTHON_PREFER_VERSION
-                    ERROR_VARIABLE PYTHON_PREFER_VERSION_ERR)
-    if(PYTHON_PREFER_VERSION_ERR)
-      message(WARNING "Unable to determine version of ${PYTHON_EXECUTABLE}: ${PYTHON_PREFER_VERSION_ERR}")
-    endif()
-    string(STRIP "${PYTHON_PREFER_VERSION}" PYTHON_PREFER_VERSION)
-  endif()
+find_package(PythonLibs ${python_version} REQUIRED)
 
-  message(STATUS "Preferring Python version ${PYTHON_PREFER_VERSION}")
-
-  if("${PYTHON_PREFER_VERSION}" MATCHES "2")
-    # Means PYTHON_EXECUTABLE wasn't defined.
-    if(PYTHON_INCLUDE_DIRS AND NOT Python2_INCLUDE_DIRS)
-      set(Python2_INCLUDE_DIRS "${PYTHON_INCLUDE_DIRS}")
-    endif()
-    if(PYTHON_LIBRARIES AND NOT Python2_LIBRARIES)
-      set(Python2_LIBRARIES "${PYTHON_LIBRARIES}")
-    endif()
-    find_package(Python2 COMPONENTS Interpreter Development REQUIRED)
-    # Search for NumPy, but not required:
-    find_package(Python2 COMPONENTS NumPy QUIET)
-    # Compat with find_package(PythonInterp), find_package(PythonLibs)
-    set(PYTHON_EXECUTABLE "${Python2_EXECUTABLE}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_INCLUDE_DIRS "${Python2_INCLUDE_DIRS}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_LIBRARIES "${Python2_LIBRARIES}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_VERSION_STRING "${Python2_VERSION}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_VERSION_MAJOR "${Python2_VERSION_MAJOR}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_VERSION_MINOR "${Python2_VERSION_MINOR}" CACHE INTERNAL "" FORCE)
-    set(NUMPY_FOUND ${Python2_NumPy_FOUND} CACHE INTERNAL "" FORCE)
-    set(NUMPY_INCLUDE_DIRS "${Python2_NumPy_INCLUDE_DIRS}" CACHE INTERNAL "" FORCE)
-  else()
-    if(PYTHON_EXECUTABLE AND NOT Python_EXECUTABLE)
-      set(Python_EXECUTABLE "${PYTHON_EXECUTABLE}")
-    endif()
-    if(PYTHON_INCLUDE_DIRS AND NOT Python_INCLUDE_DIRS)
-      set(Python_INCLUDE_DIRS "${PYTHON_INCLUDE_DIRS}")
-    endif()
-    if(PYTHON_LIBRARIES AND NOT Python_LIBRARIES)
-      set(Python_LIBRARIES "${PYTHON_LIBRARIES}")
-    endif()
-    find_package(Python COMPONENTS Interpreter Development REQUIRED)
-    # Search for NumPy, but not required:
-    find_package(Python COMPONENTS NumPy QUIET)
-    # Compat with find_package(PythonInterp), find_package(PythonLibs), find_package(NumPy)
-    set(PYTHON_EXECUTABLE "${Python_EXECUTABLE}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_INCLUDE_DIRS "${Python_INCLUDE_DIRS}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_LIBRARIES "${Python_LIBRARIES}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_VERSION_STRING "${Python_VERSION}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_VERSION_MAJOR "${Python_VERSION_MAJOR}" CACHE INTERNAL "" FORCE)
-    set(PYTHON_VERSION_MINOR "${Python_VERSION_MINOR}" CACHE INTERNAL "" FORCE)
-    set(NUMPY_FOUND ${Python_NumPy_FOUND} CACHE INTERNAL "" FORCE)
-    set(NUMPY_INCLUDE_DIRS "${Python_NumPy_INCLUDE_DIRS}" CACHE INTERNAL "" FORCE)
-  endif()
-
-else()
-  find_package(PythonInterp ${python_version} REQUIRED)
-
-  find_package(PythonLibs ${python_version} REQUIRED)
-
-  if(NOT "${PYTHONLIBS_VERSION_STRING}" MATCHES "${PYTHON_VERSION_STRING}")
-    message(FATAL_ERROR "Version mismatch between Python interpreter (${PYTHON_VERSION_STRING})"
-    " and libraries (${PYTHONLIBS_VERSION_STRING}).\nROOT cannot work with this configuration. "
-    "Please specify only PYTHON_EXECUTABLE to CMake with an absolute path to ensure matching versions are found.")
-  endif()
-
-  find_package(NumPy QUIET)
+if(NOT "${PYTHONLIBS_VERSION_STRING}" MATCHES "${PYTHON_VERSION_STRING}")
+  message(FATAL_ERROR "Version mismatch between Python interpreter (${PYTHON_VERSION_STRING})"
+  " and libraries (${PYTHONLIBS_VERSION_STRING}).\nROOT cannot work with this configuration. "
+  "Please specify only PYTHON_EXECUTABLE to CMake with an absolute path to ensure matching versions are found.")
 endif()
+
+find_package(NumPy QUIET)
-- 
2.27.0

