{% set name = "cppyy-cling" %}
# The first three items of version define the version of ROOT that we're building from.
{% set version = "6.18.2.3" %}
{% set clang_version = "5.0.0" %}
{% set clang_patches_version = "6.16.00" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/c/cppyy-cling/cppyy-cling-{{ version }}.tar.gz
  sha256: eb8a3bc25085a225aebd580753e9367f1b9273e44244d501285191eaf21971af
  patches:
  - cmake_flags.patch
  - prefix.patch

build:
  number: 0
  skip: True  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - sed
    - cmake
  host:
    - python
    - pip
    - zlib
    - clangdev ={{ clang_version }}
    - clang_variant * cling_{{ clang_patches_version }}
    - llvmdev ==5
    # Copied over from conda-forge's cling recipe:
    # FIXME: The generated allDict.cxx.pch is dependent on version of the C++
    # headers used As it is shipped in the macOS binaries we have to use the
    # same one as in the compilers package
    - libcxx =4  # [osx]
  run:
    - {{ compiler('cxx') }}
    - python
    # Copied over from conda-forge's cling recipe:
    - libcxx =4  # [osx]

test:
  commands:
    - which rootcling
    # calling rootcling directly without argument fails but it should find all
    # its libraries (it exits with 134 on macOS otherwise.)
    - bash -c "${SP_DIR}"'/cppyy_backend/bin/rootcling; [[ $? == 1 ]]'
    - which cppyy-generator
    - which cling-config
    - which genreflex

about:
  home: https://pypi.org/project/cppyy-cling
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: 'A repackaging of Cling for Automatic Python-C++ Bindings'
  description: |
    A repackaging of Cling, the interactive C++ interpreter, including C/C++
    wrappers that expose no further external headers or types.
  doc_url: http://cppyy.readthedocs.io/
  dev_url: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/

extra:
  recipe-maintainers:
    - saraedum
    - isuruf
