{% set name = "cppyy-cling" %}
{% set version = "6.32.8" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/c/cppyy-cling/{{ name.replace('-', '_') }}-{{ version }}.tar.gz
  sha256: f51ea2e9bd1418c27d1fca3ba97e322ad660a5e18180aad2d17fb55db43a0b49
  patches:
    - 0001-Simplify-setup.py.patch
    # Disable use of llvm-config, a binary which we cannot install since it pulls in libllvm which breaks the build (also, we cannot use it when cross-compiling)
    - 0002-Do-not-use-llvm-config-when-cross-compiling.patch
    # Use pre-built generated files when we cannot invoke rootcling
    - 0003-use-pre-built-dictionary-and-rootmap.patch  # [build_platform != target_platform]
    - 0004-link-against-libclangASTMatchers.patch
    - 0005-make-sure-C-formatting-symbols-are-available-in-C.patch
    - 0006-add-ThreadLocalStorage.h-directory.patch
    # Revert patch for non-macOS https://github.com/conda-forge/cppyy-cling-feedstock/pull/40#issuecomment-975781900
    - 0007-.patch  # [osx]
    # Do not use -march=native on platforms that do not support it yet.
    - 0008-clang-for-aarch64-does-not-support-march-native.patch
    # Fix dependency resolution when building rootcling
    - 0009-Fix-order-of-clang-libraries.patch
    # Fix https://github.com/conda-forge/cppyy-cling-feedstock/pull/56#issuecomment-1800307065
    - 0010-Remove-libLLVM.so-when-linking.patch
    - 0011-Hardcode-C-include-path-from-host.patch  # [osx]

build:
  number: 0
  skip: true  # [win]
  # cross-python does not support pypy yet
  skip: true  # [build_platform != target_platform and python_impl == "pypy"]
  entry_points:
    - cling-config = cppyy_backend._cling_config:main
    - genreflex = cppyy_backend._genreflex:main
    - rootcling = cppyy_backend._rootcling:main
    - cppyy-generator = cppyy_backend._cppyy_generator:main

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - sed
    - cmake
    # We need a find that understand -name
    - findutils
    - make  # [unix]
  host:
    - libboost-headers
    - python
    - pip
    - setuptools
    - zlib
    - clangdev =13 root_63004*
    # Same pin as clangdev
    - libcxx-devel {{ cxx_compiler_version }}  # [osx]
  run:
    # We need a C++ compiler at runtime to compile cppdef snippets and glue
    # code and also so that all the standard headers are available. We do not
    # need the exact compiler that was used during the build {{ compiler('cxx') }}
    # but just any functional C++ compiler.
    - cxx-compiler
    - python
    - libcxx-devel ={{ cxx_compiler_version }}.*  # [osx]

test:
  files:
    - test.h
  commands:
    - rootcling -h
    - rootcling test.dict test.h
    # calling cppyy-generator fails with "No module named clang" same happens
    # with the cppyy from PyPI.
    # cppyy-generator -h
    - genreflex -h

about:
  home: https://pypi.org/project/cppyy-cling
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: A repackaging of Cling for Automatic Python-C++ Bindings
  description: |
    A repackaging of Cling, the interactive C++ interpreter, including C/C++
    wrappers that expose no further external headers or types.
  doc_url: http://cppyy.readthedocs.io/
  dev_url: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/

extra:
  recipe-maintainers:
    - saraedum
    - isuruf
