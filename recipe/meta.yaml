{% set name = "cppyy-cling" %}
{% set version = "6.25.3" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/c/cppyy-cling/cppyy-cling-{{ version }}.tar.gz
  sha256: 34476c3a0ffc6a3bb5fea71f1f892158c981c86822661df057e7f7aeece76efc
  patches:
    - use-dumb-setup.py.patch
    - llvm.patch
    # Disable use of llvm-config, a binary which we cannot invoke when cross-compiling
    - cross.patch  # [build_platform != target_platform]
    # Use pre-built generated files when we cannot invoke rootcling
    - rootcling.patch  # [build_platform != target_platform]
    - clang-cpp.patch
    - pri.patch
    - thread.patch
    # Revert patch for non-macOS https://github.com/conda-forge/cppyy-cling-feedstock/pull/40#issuecomment-975781900
    - system_dirs.patch  # [osx]

build:
  number: 0
  skip: true  # [win]
  # cross-python does not support pypy yet
  skip: true  # [build_platform != target_platform and python_impl == "pypy"]

requirements:
  build:
    - python  # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - sed
    - cmake
    - make  # [unix]
  host:
    - python
    - pip
    - zlib
    - clangdev =9.0.1 root_62400*
    # Use the same versions of llvm that clangdev's root variant uses
    - llvmdev ==9.0.1 cling*
    - llvm ==9.0.1
  run:
    - {{ compiler('cxx') }}
    - python

test:
  commands:
    - which rootcling
    # calling rootcling directly without argument fails but it should find all
    # its libraries (it exits with 134 on macOS otherwise.)
    - bash -c "${SP_DIR}"'/cppyy_backend/bin/rootcling; [[ $? == 1 ]]'
    - which cppyy-generator
    - cling-config --incdir
    - which genreflex

about:
  home: https://pypi.org/project/cppyy-cling
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: A repackaging of Cling for Automatic Python-C++ Bindings
  description: |
    A repackaging of Cling, the interactive C++ interpreter, including C/C++
    wrappers that expose no further external headers or types.
  doc_url: http://cppyy.readthedocs.io/
  dev_url: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/

extra:
  recipe-maintainers:
    - saraedum
    - isuruf
